'use client';
import Image from 'next/image';
import { useRef, useState } from 'react';
import classes from './ImagePicker.module.css';

export default function ImagePicker({ label, name }) {
  const [pickedImage, setPickedImage] = useState();
  const imageInput = useRef();

  const pickClickHandler = () => {
    //trigger a click-method on the "input"
    imageInput.current.click();
  };

  const imageChangeHandler = (e) => {
    //input with type="file" under the hood has files-property -> array of all the files has been picked - here, access the first-file
    const file = e.target.files[0];

    if (!file) {
      //reset the preview
      setPickedImage(null);
    }

    //show the preview - convert it to data-url, us it as an source for an image-element
    const fileReader = new FileReader();

    //02. we get hold of that data-url that's being generated by assigning a value on load property - this fn will be triggered once this method "readAsDataURL(file)" is done
    fileReader.onload = () => {
      //we can access generated-url by fileReader.result
      setPickedImage(fileReader.result);
    };

    //01. this method"readAsDataURL" doesn't return anything
    fileReader.readAsDataURL(file);
  };

  return (
    <div className={classes.picker}>
      <label htmlFor={name}> {label} </label>

      <div className={classes.controls}>
        {/* display= none - to hide the default button */}
        <input
          className={classes.input}
          type="file"
          // multiple //pick multiple-files
          id={name}
          accept="image/png, image/jpeg"
          name={name}
          ref={imageInput}
          onChange={imageChangeHandler}
        />

        <button
          className={classes.button}
          type="button"
          onClick={pickClickHandler}
        >
          Pick an Image
        </button>

        <div className={classes.preview}>
          {!pickedImage && <p>No image picked yet!</p>}
          {pickedImage && (
            <Image
              src={pickedImage}
              alt="The image selected by the user."
              fill
            />
          )}
        </div>
      </div>
    </div>
  );
}
